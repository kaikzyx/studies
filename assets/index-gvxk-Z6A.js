var p=Object.defineProperty;var b=(o,t,e)=>t in o?p(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var a=(o,t,e)=>b(o,typeof t!="symbol"?t+"":t,e);import"./index-JJOcdtKS.js";const s={GRASS:1,FOREST:2,COAST:4,SEA:8,OCEAN:16},f=Object.values(s),k=f.reduce((o,t)=>o|t,0),S=new Map([[s.GRASS,{color:"#588C32",compatible:s.GRASS|s.FOREST|s.COAST}],[s.FOREST,{color:"#395955",compatible:s.GRASS|s.FOREST}],[s.COAST,{color:"#D9CA7E",compatible:s.GRASS|s.COAST|s.SEA}],[s.SEA,{color:"#0396A6",compatible:s.COAST|s.SEA|s.OCEAN}],[s.OCEAN,{color:"#036da6",compatible:s.SEA|s.OCEAN}]]);class w{constructor(t){a(this,"mask");this.mask=t}collapsed(){return(this.mask&this.mask-1)===0}collapse(){if(this.collapsed())return;const t=new Array;for(let e=0;e<f.length;e++){const r=f[e];this.mask&r&&t.push(r)}this.mask=t[Math.floor(Math.random()*t.length)]}entropy(){let t=0;for(let e=this.mask;e;e>>=1)t+=e&1;return Math.log2(t)+Math.random()*1e-6}}class E{constructor(t){a(this,"dimension");a(this,"grid");a(this,"neighbors");this.dimension=t,this.grid=new Array(t*t),this.neighbors=new Array(t*t);for(let e=0;e<t*t;e++)this.grid[e]=new w(k);for(let e=0;e<t;e++)for(let r=0;r<t;r++){const n=r+e*t,i=new Array;e>0&&i.push(n-t),r<t-1&&i.push(n+1),e<t-1&&i.push(n+t),r>0&&i.push(n-1),this.neighbors[n]=i}}step(t){for(let e=0;e<t;e++){const r=this.minimum();if(r===-1)return"completed";if(this.grid[r].collapse(),!this.propagate([r]))return"error"}return"running"}draw(t){const e=Math.min(t.width,t.height),r=e/this.dimension;t.noStroke().translate((t.width-e)/2,(t.height-e)/2);for(let n=0;n<this.dimension;n++)for(let i=0;i<this.dimension;i++){const l=this.grid[i+n*this.dimension];if(l.collapsed()){const[c,h]=[i*r,n*r],g=S.get(l.mask);t.fill(g.color).square(c,h,r)}}t.translate(0,0)}minimum(){let[t,e]=[-1,1/0];for(let r=0;r<this.grid.length;r++){const n=this.grid[r];if(!n.collapsed()){const i=n.entropy();i<e&&(e=i,t=r)}}return t}propagate(t){for(;t.length>0;){const e=t.shift(),r=this.grid[e].mask,n=this.neighbors[e];for(let i=0;i<n.length;i++){let l=r,c=0;for(let u=0;l>0;u++){if(l&1){const A=f[u];c|=S.get(A).compatible}l>>=1}const h=n[i],g=this.grid[h],m=g.mask,d=m&c;if(d===0)return!1;d!==m&&(g.mask=d,t.push(h))}}return!0}}function x(o){const t=new E(64);o.setup=()=>{o.createCanvas(600,600)},o.draw=()=>{o.background("black");const e=t.step(100);e!=="running"&&(e==="error"&&o.background("red"),o.noLoop()),t.draw(o)}}export{x as default};
